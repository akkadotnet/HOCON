%%{
  machine DotSeparatedListParser;
 
  action GotOne {
    var parsedItem = data.Substring(ts,te-ts);
    retVal.Add(parsedItem);
  }  
  
  action GotOneWithQuotes {
    var parsedItem = data.Substring(ts+1,te-ts-2);
    retVal.Add(parsedItem);
  }
 
  separator = ".";
  squote = "'";
  dquote = '"';
  not_squote = [^'];
  not_dquote = [^"];
  not_separator = [^.];
 
  main := |*
    squote ( not_squote )* squote => GotOneWithQuotes;
    dquote ( not_dquote )* dquote => GotOneWithQuotes;
    ( not_separator )* => GotOne;
    separator;
  *|;
}%%
 
/*
 
THIS FILE WAS AUTOGENERATED BY Ragel (http://www.complang.org/ragel/).
See lang description in: DotSeparatedListParser.rl file
 
Description: parse '.' separated string into list of string.
 
HOWTO Regenerate: Ragel -A -L DotSeparatedListParser.rl -o DotSeparatedListParser.g.cs
*/
namespace Akka.Configuration.Hocon
{
    using System.Collections.Generic;
 
    internal class DotSeparatedListParser
    {
        #region data
        %% write data;
        #endregion
 
        public static List<string> Parse(string data)
        {
            var retVal = new List<string>();
            int cs;
            int ts;
            int te;
            int act;
            
            int p = 0;
            int pe = data.Length;
            int eof = data.Length;
            
            #region init
            %% write init;
            #endregion
 
            #region exec
            %% write exec;
            #endregion
            
            return retVal;
        }
    }
}