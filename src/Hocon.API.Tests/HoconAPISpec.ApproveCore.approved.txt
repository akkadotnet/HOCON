[assembly: System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.6.1", FrameworkDisplayName=".NET Framework 4.6.1")]
namespace Hocon
{
    public sealed class HoconArray : Hocon.HoconElement, System.Collections.Generic.IEnumerable<Hocon.HoconElement>, System.Collections.Generic.IReadOnlyCollection<Hocon.HoconElement>, System.Collections.Generic.IReadOnlyList<Hocon.HoconElement>, System.Collections.IEnumerable, System.Collections.Immutable.IImmutableList<Hocon.HoconElement>
    {
        public int Count { get; }
        public Hocon.HoconElement this[int index] { get; }
        public override string Raw { get; }
        public override Hocon.HoconType Type { get; }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> Add(Hocon.HoconElement element) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> AddRange(System.Collections.Generic.IEnumerable<Hocon.HoconElement> elements) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> Clear() { }
        public override bool Equals(Hocon.HoconElement other) { }
        public System.Collections.Generic.IEnumerator<Hocon.HoconElement> GetEnumerator() { }
        public override int GetHashCode() { }
        public int IndexOf(Hocon.HoconElement item, int startIndex, int count, System.Collections.Generic.IEqualityComparer<Hocon.HoconElement> equalityComparer) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> Insert(int index, Hocon.HoconElement element) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> InsertRange(int index, System.Collections.Generic.IEnumerable<Hocon.HoconElement> elements) { }
        public int LastIndexOf(Hocon.HoconElement item, int startIndex, int count, System.Collections.Generic.IEqualityComparer<Hocon.HoconElement> equalityComparer) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> Remove(Hocon.HoconElement element, System.Collections.Generic.IEqualityComparer<Hocon.HoconElement> equalityComparer) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> RemoveAll(System.Predicate<Hocon.HoconElement> match) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> RemoveAt(int index) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> RemoveRange(System.Collections.Generic.IEnumerable<Hocon.HoconElement> elements, System.Collections.Generic.IEqualityComparer<Hocon.HoconElement> equalityComparer) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> RemoveRange(int index, int count) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> Replace(Hocon.HoconElement oldValue, Hocon.HoconElement newValue, System.Collections.Generic.IEqualityComparer<Hocon.HoconElement> equalityComparer) { }
        public System.Collections.Immutable.IImmutableList<Hocon.HoconElement> SetItem(int index, Hocon.HoconElement element) { }
        public override string ToString(int indent, int indentSize) { }
        public static bool[] op_Implicit(Hocon.HoconArray arr) { }
        public static sbyte[] op_Implicit(Hocon.HoconArray arr) { }
        public static byte[] op_Implicit(Hocon.HoconArray arr) { }
        public static short[] op_Implicit(Hocon.HoconArray arr) { }
        public static ushort[] op_Implicit(Hocon.HoconArray arr) { }
        public static int[] op_Implicit(Hocon.HoconArray arr) { }
        public static uint[] op_Implicit(Hocon.HoconArray arr) { }
        public static long[] op_Implicit(Hocon.HoconArray arr) { }
        public static ulong[] op_Implicit(Hocon.HoconArray arr) { }
        public static System.Numerics.BigInteger[] op_Implicit(Hocon.HoconArray arr) { }
        public static float[] op_Implicit(Hocon.HoconArray arr) { }
        public static double[] op_Implicit(Hocon.HoconArray arr) { }
        public static decimal[] op_Implicit(Hocon.HoconArray arr) { }
        public static System.TimeSpan[] op_Implicit(Hocon.HoconArray arr) { }
        public static string[] op_Implicit(Hocon.HoconArray arr) { }
        public static char[] op_Implicit(Hocon.HoconArray arr) { }
    }
    public sealed class HoconArrayBuilder : System.Collections.Generic.List<Hocon.HoconElement>
    {
        public HoconArrayBuilder() { }
        public HoconArrayBuilder(System.Collections.Generic.IEnumerable<Hocon.HoconElement> collection) { }
        public HoconArrayBuilder(int capacity) { }
        public Hocon.HoconArray Build() { }
    }
    public class static HoconArrayGetterExtensions
    {
        public static System.Collections.Generic.IList<Hocon.HoconElement> GetArray(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<System.Numerics.BigInteger> GetBigIntegerList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<System.Numerics.BigInteger> GetBigIntegerList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<System.Numerics.BigInteger> GetBigIntegerList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<System.Numerics.BigInteger> GetBigIntegerList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<System.Numerics.BigInteger> @default) { }
        public static System.Collections.Generic.IList<System.Numerics.BigInteger> GetBigIntegerList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<System.Numerics.BigInteger> @default) { }
        public static System.Collections.Generic.IList<bool> GetBooleanList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<bool> GetBooleanList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<bool> GetBooleanList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<bool> GetBooleanList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<bool> @default) { }
        public static System.Collections.Generic.IList<bool> GetBooleanList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<bool> @default) { }
        public static System.Collections.Generic.IList<byte> GetByteList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<byte> GetByteList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<byte> GetByteList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<byte> GetByteList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<byte> @default) { }
        public static System.Collections.Generic.IList<byte> GetByteList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<byte> @default) { }
        public static System.Collections.Generic.IList<char> GetCharList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<char> GetCharList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<char> GetCharList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<char> GetCharList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<char> default = null) { }
        public static System.Collections.Generic.IList<char> GetCharList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<char> default = null) { }
        public static System.Collections.Generic.IList<decimal> GetDecimalList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<decimal> GetDecimalList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<decimal> GetDecimalList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<decimal> GetDecimalList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<decimal> @default) { }
        public static System.Collections.Generic.IList<decimal> GetDecimalList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<decimal> @default) { }
        public static System.Collections.Generic.IList<double> GetDoubleList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<double> GetDoubleList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<double> GetDoubleList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<double> GetDoubleList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<double> @default) { }
        public static System.Collections.Generic.IList<double> GetDoubleList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<double> @default) { }
        public static System.Collections.Generic.IList<float> GetFloatList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<float> GetFloatList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<float> GetFloatList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<float> GetFloatList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<float> @default) { }
        public static System.Collections.Generic.IList<float> GetFloatList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<float> @default) { }
        public static System.Collections.Generic.IList<int> GetIntList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<int> GetIntList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<int> GetIntList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<int> GetIntList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<int> @default) { }
        public static System.Collections.Generic.IList<int> GetIntList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<int> @default) { }
        public static System.Collections.Generic.IList<long> GetLongList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<long> GetLongList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<long> GetLongList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<long> GetLongList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<long> @default) { }
        public static System.Collections.Generic.IList<long> GetLongList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<long> @default) { }
        public static System.Collections.Generic.IList<Hocon.HoconObject> GetObjectList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<Hocon.HoconObject> GetObjectList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<Hocon.HoconObject> GetObjectList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<Hocon.HoconObject> GetObjectList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<Hocon.HoconObject> @default) { }
        public static System.Collections.Generic.IList<Hocon.HoconObject> GetObjectList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<Hocon.HoconObject> default = null) { }
        public static System.Collections.Generic.IList<sbyte> GetSByteList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<sbyte> GetSByteList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<sbyte> GetSByteList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<sbyte> GetSByteList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<sbyte> @default) { }
        public static System.Collections.Generic.IList<sbyte> GetSByteList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<sbyte> @default) { }
        public static System.Collections.Generic.IList<short> GetShortList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<short> GetShortList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<short> GetShortList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<short> GetShortList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<short> @default) { }
        public static System.Collections.Generic.IList<short> GetShortList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<short> @default) { }
        public static System.Collections.Generic.IList<string> GetStringList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<string> GetStringList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<string> GetStringList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<string> GetStringList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<string> @default) { }
        public static System.Collections.Generic.IList<string> GetStringList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<string> @default) { }
        public static System.Collections.Generic.IList<System.TimeSpan> GetTimeSpanList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<System.TimeSpan> GetTimeSpanList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<System.TimeSpan> GetTimeSpanList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<System.TimeSpan> GetTimeSpanList(this Hocon.HoconElement element, string path, bool allowInfinite = True, System.Collections.Generic.IList<System.TimeSpan> default = null) { }
        public static System.Collections.Generic.IList<System.TimeSpan> GetTimeSpanList(this Hocon.HoconElement element, Hocon.HoconPath path, bool allowInfinite = True, System.Collections.Generic.IList<System.TimeSpan> default = null) { }
        public static System.Collections.Generic.IList<uint> GetUIntList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<uint> GetUIntList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<uint> GetUIntList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<uint> GetUIntList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<uint> @default) { }
        public static System.Collections.Generic.IList<uint> GetUIntList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<uint> @default) { }
        public static System.Collections.Generic.IList<ulong> GetULongList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<ulong> GetULongList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<ulong> GetULongList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<ulong> GetULongList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<ulong> @default) { }
        public static System.Collections.Generic.IList<ulong> GetULongList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<ulong> @default) { }
        public static System.Collections.Generic.IList<ushort> GetUShortList(this Hocon.HoconElement element) { }
        public static System.Collections.Generic.IList<ushort> GetUShortList(this Hocon.HoconElement element, string path) { }
        public static System.Collections.Generic.IList<ushort> GetUShortList(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Collections.Generic.IList<ushort> GetUShortList(this Hocon.HoconElement element, string path, System.Collections.Generic.IList<ushort> @default) { }
        public static System.Collections.Generic.IList<ushort> GetUShortList(this Hocon.HoconElement element, Hocon.HoconPath path, System.Collections.Generic.IList<ushort> @default) { }
        public static T[] ToArray<T>(this Hocon.HoconElement element) { }
        public static System.Numerics.BigInteger[] ToBigIntegerArray(this Hocon.HoconElement element) { }
        public static bool[] ToBooleanArray(this Hocon.HoconElement element) { }
        public static byte[] ToByteArray(this Hocon.HoconElement element) { }
        public static char[] ToCharArray(this Hocon.HoconElement element) { }
        public static decimal[] ToDecimalArray(this Hocon.HoconElement element) { }
        public static double[] ToDoubleArray(this Hocon.HoconElement element) { }
        public static float[] ToFloatArray(this Hocon.HoconElement element) { }
        public static int[] ToIntArray(this Hocon.HoconElement element) { }
        public static long[] ToLongArray(this Hocon.HoconElement element) { }
        public static Hocon.HoconObject[] ToObjectArray(this Hocon.HoconElement element) { }
        public static sbyte[] ToSByteArray(this Hocon.HoconElement element) { }
        public static short[] ToShortArray(this Hocon.HoconElement element) { }
        public static string[] ToStringArray(this Hocon.HoconElement element) { }
        public static System.TimeSpan[] ToTimeSpanArray(this Hocon.HoconElement element) { }
        public static uint[] ToUIntArray(this Hocon.HoconElement element) { }
        public static ulong[] ToULongArray(this Hocon.HoconElement element) { }
        public static ushort[] ToUShortArray(this Hocon.HoconElement element) { }
        public static bool TryGetBigIntegerList(this Hocon.HoconElement element, out System.Collections.Generic.IList<System.Numerics.BigInteger> result) { }
        public static bool TryGetBigIntegerList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<System.Numerics.BigInteger> result) { }
        public static bool TryGetBigIntegerList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<System.Numerics.BigInteger> result) { }
        public static bool TryGetBooleanList(this Hocon.HoconElement element, out System.Collections.Generic.IList<bool> result) { }
        public static bool TryGetBooleanList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<bool> result) { }
        public static bool TryGetBooleanList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<bool> result) { }
        public static bool TryGetByteList(this Hocon.HoconElement element, out System.Collections.Generic.IList<byte> result) { }
        public static bool TryGetByteList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<byte> result) { }
        public static bool TryGetByteList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<byte> result) { }
        public static bool TryGetCharList(this Hocon.HoconElement element, out System.Collections.Generic.IList<char> result) { }
        public static bool TryGetCharList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<char> result) { }
        public static bool TryGetCharList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<char> result) { }
        public static bool TryGetDecimalList(this Hocon.HoconElement element, out System.Collections.Generic.IList<decimal> result) { }
        public static bool TryGetDecimalList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<decimal> result) { }
        public static bool TryGetDecimalList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<decimal> result) { }
        public static bool TryGetDoubleList(this Hocon.HoconElement element, out System.Collections.Generic.IList<double> result) { }
        public static bool TryGetDoubleList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<double> result) { }
        public static bool TryGetDoubleList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<double> result) { }
        public static bool TryGetFloatList(this Hocon.HoconElement element, out System.Collections.Generic.IList<float> result) { }
        public static bool TryGetFloatList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<float> result) { }
        public static bool TryGetFloatList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<float> result) { }
        public static bool TryGetIntList(this Hocon.HoconElement element, out System.Collections.Generic.IList<int> result) { }
        public static bool TryGetIntList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<int> result) { }
        public static bool TryGetIntList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<int> result) { }
        public static bool TryGetLongList(this Hocon.HoconElement element, out System.Collections.Generic.IList<long> result) { }
        public static bool TryGetLongList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<long> result) { }
        public static bool TryGetLongList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<long> result) { }
        public static bool TryGetObjectList(this Hocon.HoconElement element, out System.Collections.Generic.IList<Hocon.HoconObject> result) { }
        public static bool TryGetObjectList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<Hocon.HoconObject> result) { }
        public static bool TryGetObjectList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<Hocon.HoconObject> result) { }
        public static bool TryGetSByteList(this Hocon.HoconElement element, out System.Collections.Generic.IList<sbyte> result) { }
        public static bool TryGetSByteList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<sbyte> result) { }
        public static bool TryGetSByteList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<sbyte> result) { }
        public static bool TryGetShortList(this Hocon.HoconElement element, out System.Collections.Generic.IList<short> result) { }
        public static bool TryGetShortList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<short> result) { }
        public static bool TryGetShortList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<short> result) { }
        public static bool TryGetStringList(this Hocon.HoconElement element, out System.Collections.Generic.IList<string> result) { }
        public static bool TryGetStringList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<string> result) { }
        public static bool TryGetStringList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<string> result) { }
        public static bool TryGetTimeSpanList(this Hocon.HoconElement element, out System.Collections.Generic.IList<System.TimeSpan> result, bool allowInfinite = True) { }
        public static bool TryGetTimeSpanList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<System.TimeSpan> result, bool allowInfinite = True) { }
        public static bool TryGetTimeSpanList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<System.TimeSpan> result, bool allowInfinite = True) { }
        public static bool TryGetUIntList(this Hocon.HoconElement element, out System.Collections.Generic.IList<uint> result) { }
        public static bool TryGetUIntList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<uint> result) { }
        public static bool TryGetUIntList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<uint> result) { }
        public static bool TryGetULongList(this Hocon.HoconElement element, out System.Collections.Generic.IList<ulong> result) { }
        public static bool TryGetULongList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<ulong> result) { }
        public static bool TryGetULongList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<ulong> result) { }
        public static bool TryGetUShortList(this Hocon.HoconElement element, out System.Collections.Generic.IList<ushort> result) { }
        public static bool TryGetUShortList(this Hocon.HoconElement element, string path, out System.Collections.Generic.IList<ushort> result) { }
        public static bool TryGetUShortList(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Collections.Generic.IList<ushort> result) { }
    }
    public enum HoconCallbackType
    {
        File = 0,
        Url = 1,
        Resource = 2,
    }
    public abstract class HoconElement : System.IEquatable<Hocon.HoconElement>
    {
        protected HoconElement() { }
        public Hocon.HoconElement this[int index] { get; }
        public virtual Hocon.HoconElement this[string path] { get; }
        public virtual Hocon.HoconElement this[Hocon.HoconPath path] { get; }
        public abstract string Raw { get; }
        public abstract Hocon.HoconType Type { get; }
        [System.ObsoleteAttribute("There is no need to use Value property anymore, please remove it.")]
        public Hocon.HoconElement Value { get; }
        public Hocon.HoconElement AtKey(string key) { }
        public override bool Equals(object other) { }
        public abstract bool Equals(Hocon.HoconElement other);
        public virtual bool HasPath(string path) { }
        public virtual bool HasPath(Hocon.HoconPath path) { }
        public abstract string ToString(int indent, int indentSize);
        public static bool ==(Hocon.HoconElement left, Hocon.HoconElement right) { }
        public static bool op_Implicit(Hocon.HoconElement element) { }
        public static sbyte op_Implicit(Hocon.HoconElement element) { }
        public static byte op_Implicit(Hocon.HoconElement element) { }
        public static short op_Implicit(Hocon.HoconElement element) { }
        public static ushort op_Implicit(Hocon.HoconElement element) { }
        public static int op_Implicit(Hocon.HoconElement element) { }
        public static uint op_Implicit(Hocon.HoconElement element) { }
        public static long op_Implicit(Hocon.HoconElement element) { }
        public static ulong op_Implicit(Hocon.HoconElement element) { }
        public static System.Numerics.BigInteger op_Implicit(Hocon.HoconElement element) { }
        public static float op_Implicit(Hocon.HoconElement element) { }
        public static double op_Implicit(Hocon.HoconElement element) { }
        public static decimal op_Implicit(Hocon.HoconElement element) { }
        public static System.TimeSpan op_Implicit(Hocon.HoconElement element) { }
        public static string op_Implicit(Hocon.HoconElement element) { }
        public static char op_Implicit(Hocon.HoconElement element) { }
        public static bool[] op_Implicit(Hocon.HoconElement element) { }
        public static sbyte[] op_Implicit(Hocon.HoconElement element) { }
        public static byte[] op_Implicit(Hocon.HoconElement element) { }
        public static short[] op_Implicit(Hocon.HoconElement element) { }
        public static ushort[] op_Implicit(Hocon.HoconElement element) { }
        public static int[] op_Implicit(Hocon.HoconElement element) { }
        public static uint[] op_Implicit(Hocon.HoconElement element) { }
        public static long[] op_Implicit(Hocon.HoconElement element) { }
        public static ulong[] op_Implicit(Hocon.HoconElement element) { }
        public static System.Numerics.BigInteger[] op_Implicit(Hocon.HoconElement element) { }
        public static float[] op_Implicit(Hocon.HoconElement element) { }
        public static double[] op_Implicit(Hocon.HoconElement element) { }
        public static decimal[] op_Implicit(Hocon.HoconElement element) { }
        public static System.TimeSpan[] op_Implicit(Hocon.HoconElement element) { }
        public static string[] op_Implicit(Hocon.HoconElement element) { }
        public static char[] op_Implicit(Hocon.HoconElement element) { }
        public static bool !=(Hocon.HoconElement left, Hocon.HoconElement right) { }
    }
    public class HoconException : System.Exception
    {
        public HoconException(string message) { }
        public HoconException(string message, System.Exception innerException) { }
    }
    public class static HoconExtensions { }
    public class static HoconGenericGetterExtensions
    {
        public static T Get<T>(this Hocon.HoconElement element) { }
        public static object Get(this Hocon.HoconElement element, System.Type type) { }
    }
    public delegate System.Threading.Tasks.Task<string> HoconIncludeCallbackAsync(Hocon.HoconCallbackType callbackType, string value);
    public sealed class HoconLiteral : Hocon.HoconElement
    {
        public static readonly Hocon.HoconLiteral Null;
        public Hocon.HoconLiteralType LiteralType { get; }
        public override string Raw { get; }
        public override Hocon.HoconType Type { get; }
        public string Value { get; }
        public static Hocon.HoconLiteral Create(string value) { }
        public override bool Equals(Hocon.HoconElement other) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public override string ToString(int indent, int indentSize) { }
        public static char op_Implicit(Hocon.HoconLiteral lit) { }
        public static char[] op_Implicit(Hocon.HoconLiteral lit) { }
        public static string op_Implicit(Hocon.HoconLiteral lit) { }
        public static bool op_Implicit(Hocon.HoconLiteral lit) { }
        public static sbyte op_Implicit(Hocon.HoconLiteral lit) { }
        public static byte op_Implicit(Hocon.HoconLiteral lit) { }
        public static short op_Implicit(Hocon.HoconLiteral lit) { }
        public static ushort op_Implicit(Hocon.HoconLiteral lit) { }
        public static int op_Implicit(Hocon.HoconLiteral lit) { }
        public static uint op_Implicit(Hocon.HoconLiteral lit) { }
        public static long op_Implicit(Hocon.HoconLiteral lit) { }
        public static ulong op_Implicit(Hocon.HoconLiteral lit) { }
        public static System.Numerics.BigInteger op_Implicit(Hocon.HoconLiteral lit) { }
        public static float op_Implicit(Hocon.HoconLiteral lit) { }
        public static double op_Implicit(Hocon.HoconLiteral lit) { }
        public static decimal op_Implicit(Hocon.HoconLiteral lit) { }
        public static System.TimeSpan op_Implicit(Hocon.HoconLiteral lit) { }
    }
    public sealed class HoconLiteralBuilder
    {
        public HoconLiteralBuilder() { }
        public HoconLiteralBuilder(int capacity) { }
        public HoconLiteralBuilder(string value) { }
        public HoconLiteralBuilder(int capacity, int maxCapacity) { }
        public HoconLiteralBuilder(string value, int capacity) { }
        public HoconLiteralBuilder(string value, int startIndex, int length, int capacity) { }
        public int Capacity { get; set; }
        public char this[int index] { get; set; }
        public int Length { get; set; }
        public int MaxCapacity { get; }
        public Hocon.HoconLiteralBuilder Append(ushort value) { }
        public Hocon.HoconLiteralBuilder Append(uint value) { }
        public Hocon.HoconLiteralBuilder Append(ulong value) { }
        public Hocon.HoconLiteralBuilder Append(char[] value, int startIndex, int charCount) { }
        public Hocon.HoconLiteralBuilder Append(string value, int startIndex, int count) { }
        public Hocon.HoconLiteralBuilder Append(char value, int repeatCount) { }
        public Hocon.HoconLiteralBuilder Append(sbyte value) { }
        public Hocon.HoconLiteralBuilder Append(float value) { }
        public Hocon.HoconLiteralBuilder Append(bool value) { }
        public Hocon.HoconLiteralBuilder Append(char value) { }
        public Hocon.HoconLiteralBuilder Append(char[] value) { }
        public Hocon.HoconLiteralBuilder Append(decimal value) { }
        public Hocon.HoconLiteralBuilder Append(byte value) { }
        public Hocon.HoconLiteralBuilder Append(short value) { }
        public Hocon.HoconLiteralBuilder Append(int value) { }
        public Hocon.HoconLiteralBuilder Append(long value) { }
        public Hocon.HoconLiteralBuilder Append(object value) { }
        public Hocon.HoconLiteralBuilder Append(double value) { }
        public Hocon.HoconLiteralBuilder Append(string value) { }
        public Hocon.HoconLiteralBuilder AppendFormat(System.IFormatProvider provider, string format, object arg0, object arg1, object arg2) { }
        public Hocon.HoconLiteralBuilder AppendFormat(string format, object arg0) { }
        public Hocon.HoconLiteralBuilder AppendFormat(string format, params object[] args) { }
        public Hocon.HoconLiteralBuilder AppendFormat(System.IFormatProvider provider, string format, object arg0) { }
        public Hocon.HoconLiteralBuilder AppendFormat(System.IFormatProvider provider, string format, params object[] args) { }
        public Hocon.HoconLiteralBuilder AppendFormat(string format, object arg0, object arg1) { }
        public Hocon.HoconLiteralBuilder AppendFormat(System.IFormatProvider provider, string format, object arg0, object arg1) { }
        public Hocon.HoconLiteralBuilder AppendFormat(string format, object arg0, object arg1, object arg2) { }
        public Hocon.HoconLiteralBuilder AppendLine() { }
        public Hocon.HoconLiteralBuilder AppendLine(string value) { }
        public Hocon.HoconLiteral Build() { }
        public Hocon.HoconLiteralBuilder Clear() { }
        public Hocon.HoconLiteralBuilder EnsureCapacity(int capacity) { }
        public bool Equals(Hocon.HoconLiteralBuilder otherBuilder) { }
        public bool Equals(System.Text.StringBuilder sb) { }
        public Hocon.HoconLiteralBuilder Insert(int index, string value, int count) { }
        public Hocon.HoconLiteralBuilder Insert(int index, ulong value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, uint value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, ushort value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, string value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, float value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, char[] value, int startIndex, int charCount) { }
        public Hocon.HoconLiteralBuilder Insert(int index, sbyte value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, long value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, int value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, double value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, decimal value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, char[] value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, char value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, byte value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, bool value) { }
        public Hocon.HoconLiteralBuilder Insert(int index, object value) { }
        public Hocon.HoconLiteralBuilder Remove(int startIndex, int length) { }
        public Hocon.HoconLiteralBuilder Replace(char oldChar, char newChar) { }
        public Hocon.HoconLiteralBuilder Replace(string oldValue, string newValue) { }
        public Hocon.HoconLiteralBuilder Replace(char oldChar, char newChar, int startIndex, int count) { }
        public Hocon.HoconLiteralBuilder Replace(string oldValue, string newValue, int startIndex, int count) { }
        public override string ToString() { }
        public string ToString(int startIndex, int length) { }
    }
    public enum HoconLiteralType
    {
        Null = 0,
        Whitespace = 1,
        UnquotedString = 2,
        QuotedString = 3,
        TripleQuotedString = 4,
        Bool = 5,
        Long = 6,
        Hex = 7,
        Octal = 8,
        Double = 9,
    }
    public class HoconObject : Hocon.HoconElement, System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Hocon.HoconElement>>, System.Collections.Generic.IDictionary<string, Hocon.HoconElement>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Hocon.HoconElement>>, System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string, Hocon.HoconElement>>, System.Collections.Generic.IReadOnlyDictionary<string, Hocon.HoconElement>, System.Collections.IEnumerable
    {
        public static readonly Hocon.HoconObject Empty;
        protected System.Collections.Immutable.ImmutableSortedDictionary<string, Hocon.HoconElement> Fields;
        protected HoconObject() { }
        protected HoconObject(Hocon.HoconElement source) { }
        protected HoconObject(System.Collections.Generic.IDictionary<string, Hocon.HoconElement> fields) { }
        protected HoconObject(System.Collections.Generic.IReadOnlyDictionary<string, Hocon.HoconElement> fields) { }
        public int Count { get; }
        public bool IsReadOnly { get; }
        public override Hocon.HoconElement this[Hocon.HoconPath path] { get; }
        public Hocon.HoconElement this[string path] { get; set; }
        public System.Collections.Generic.IEnumerable<string> Keys { get; }
        public override string Raw { get; }
        public override Hocon.HoconType Type { get; }
        public System.Collections.Generic.IDictionary<string, object> Unwrapped { get; }
        public System.Collections.Generic.IEnumerable<Hocon.HoconElement> Values { get; }
        public void Add(string key, Hocon.HoconElement value) { }
        public void Add(System.Collections.Generic.KeyValuePair<string, Hocon.HoconElement> item) { }
        public virtual System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Hocon.HoconElement>> AsEnumerable() { }
        public void Clear() { }
        public bool Contains(System.Collections.Generic.KeyValuePair<string, Hocon.HoconElement> item) { }
        public bool ContainsKey(string key) { }
        public void CopyTo(System.Collections.Generic.KeyValuePair<, >[] array, int arrayIndex) { }
        public override bool Equals(Hocon.HoconElement other) { }
        public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, Hocon.HoconElement>> GetEnumerator() { }
        [System.ObsoleteAttribute("Use GetValue() instead")]
        public Hocon.HoconElement GetField(string path) { }
        [System.ObsoleteAttribute("Use GetValue() instead")]
        public Hocon.HoconElement GetField(Hocon.HoconPath path) { }
        public virtual Hocon.HoconElement GetValue(string path) { }
        public virtual Hocon.HoconElement GetValue(Hocon.HoconPath path) { }
        public override bool HasPath(string path) { }
        public override bool HasPath(Hocon.HoconPath path) { }
        public Hocon.HoconObject Merge(Hocon.HoconObject other) { }
        public string PrettyPrint(int indentSize) { }
        public bool Remove(string key) { }
        public bool Remove(System.Collections.Generic.KeyValuePair<string, Hocon.HoconElement> item) { }
        public Hocon.HoconArray ToArray() { }
        public override string ToString() { }
        public override string ToString(int indent, int indentSize) { }
        public bool TryGetArray(out Hocon.HoconArray result) { }
        public virtual bool TryGetValue(string path, out Hocon.HoconElement result) { }
        public virtual bool TryGetValue(Hocon.HoconPath path, out Hocon.HoconElement result) { }
        public static bool[] op_Implicit(Hocon.HoconObject obj) { }
        public static sbyte[] op_Implicit(Hocon.HoconObject obj) { }
        public static byte[] op_Implicit(Hocon.HoconObject obj) { }
        public static short[] op_Implicit(Hocon.HoconObject obj) { }
        public static ushort[] op_Implicit(Hocon.HoconObject obj) { }
        public static int[] op_Implicit(Hocon.HoconObject obj) { }
        public static uint[] op_Implicit(Hocon.HoconObject obj) { }
        public static long[] op_Implicit(Hocon.HoconObject obj) { }
        public static ulong[] op_Implicit(Hocon.HoconObject obj) { }
        public static System.Numerics.BigInteger[] op_Implicit(Hocon.HoconObject obj) { }
        public static float[] op_Implicit(Hocon.HoconObject obj) { }
        public static double[] op_Implicit(Hocon.HoconObject obj) { }
        public static decimal[] op_Implicit(Hocon.HoconObject obj) { }
        public static System.TimeSpan[] op_Implicit(Hocon.HoconObject obj) { }
        public static string[] op_Implicit(Hocon.HoconObject obj) { }
        public static char[] op_Implicit(Hocon.HoconObject obj) { }
    }
    public sealed class HoconObjectBuilder : System.Collections.Generic.SortedDictionary<string, Hocon.HoconElement>
    {
        public HoconObjectBuilder() { }
        public HoconObjectBuilder(Hocon.HoconElement source) { }
        public HoconObjectBuilder(System.Collections.Generic.Dictionary<string, Hocon.HoconElement> source) { }
        public Hocon.HoconObjectBuilder Add(string key, Hocon.HoconElement value) { }
        public Hocon.HoconObject Build() { }
        public Hocon.HoconObjectBuilder Clear() { }
        public Hocon.HoconObjectBuilder FallbackMerge(Hocon.HoconObject @object) { }
        public Hocon.HoconObjectBuilder Merge(Hocon.HoconObject other) { }
        public Hocon.HoconObjectBuilder Merge(System.Collections.Generic.Dictionary<string, Hocon.HoconElement> fields) { }
        public Hocon.HoconObjectBuilder Merge(System.Collections.Generic.IReadOnlyDictionary<string, Hocon.HoconElement> fields) { }
        public Hocon.HoconObjectBuilder Remove(string key) { }
    }
    public sealed class HoconParser
    {
        public HoconParser() { }
        public static Hocon.HoconObject Parse(string text, Hocon.HoconIncludeCallbackAsync includeCallback = null) { }
    }
    public sealed class HoconParserException : System.Exception
    {
        public HoconParserException() { }
        public HoconParserException(string message) { }
        public HoconParserException(string message, System.Exception innerException) { }
        public int LineNumber { get; }
        public int LinePosition { get; }
    }
    public sealed class HoconPath : System.Collections.Generic.List<string>, System.IEquatable<Hocon.HoconPath>
    {
        public static readonly Hocon.HoconPath Empty;
        public HoconPath(System.Collections.Generic.IEnumerable<string> path) { }
        public bool IsEmpty { get; }
        public string Key { get; }
        public string Value { get; }
        public bool Equals(Hocon.HoconPath other) { }
        public override bool Equals(object obj) { }
        public override int GetHashCode() { }
        public static Hocon.HoconPath Parse(string path) { }
        public Hocon.HoconPath SubPath(int length) { }
        public Hocon.HoconPath SubPath(int index, int count) { }
        public override string ToString() { }
        public static bool TryParse(string path, out Hocon.HoconPath result) { }
        public static bool ==(Hocon.HoconPath left, Hocon.HoconPath right) { }
        public static bool !=(Hocon.HoconPath left, Hocon.HoconPath right) { }
    }
    public sealed class HoconTokenizerException : System.Exception
    {
        public int LineNumber { get; }
        public int LinePosition { get; }
        public string Value { get; }
    }
    public enum HoconType
    {
        Empty = 0,
        Array = 1,
        Object = 2,
        String = 3,
    }
    public class static HoconTypeConverterExtensions
    {
        public static Hocon.HoconArray ToArray(this Hocon.HoconElement element) { }
        public static Hocon.HoconLiteral ToLiteral(this Hocon.HoconElement element) { }
        public static Hocon.HoconObject ToObject(this Hocon.HoconElement element) { }
    }
    public class HoconValueException : Hocon.HoconException
    {
        public HoconValueException(string message, string failPath, System.Exception innerException) { }
        public HoconValueException(string message, Hocon.HoconPath failPath, System.Exception innerException) { }
        public string FailPath { get; }
    }
    public class static HoconValueGetterExtensions
    {
        public static System.Numerics.BigInteger GetBigInteger(this Hocon.HoconElement element) { }
        public static System.Numerics.BigInteger GetBigInteger(this Hocon.HoconElement element, string path) { }
        public static System.Numerics.BigInteger GetBigInteger(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Numerics.BigInteger GetBigInteger(this Hocon.HoconElement element, string path, System.Numerics.BigInteger @default) { }
        public static System.Numerics.BigInteger GetBigInteger(this Hocon.HoconElement element, Hocon.HoconPath path, System.Numerics.BigInteger @default) { }
        public static bool GetBoolean(this Hocon.HoconElement element) { }
        public static bool GetBoolean(this Hocon.HoconElement element, string path) { }
        public static bool GetBoolean(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static bool GetBoolean(this Hocon.HoconElement element, string path, bool @default) { }
        public static bool GetBoolean(this Hocon.HoconElement element, Hocon.HoconPath path, bool @default) { }
        public static byte GetByte(this Hocon.HoconElement element) { }
        public static byte GetByte(this Hocon.HoconElement element, string path) { }
        public static byte GetByte(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static byte GetByte(this Hocon.HoconElement element, string path, byte @default) { }
        public static byte GetByte(this Hocon.HoconElement element, Hocon.HoconPath path, byte @default) { }
        public static System.TimeSpan GetByte(this Hocon.HoconElement element, string path, System.TimeSpan @default, bool allowInfinite = True) { }
        public static System.TimeSpan GetByte(this Hocon.HoconElement element, Hocon.HoconPath path, System.TimeSpan @default, bool allowInfinite = True) { }
        public static System.Nullable<long> GetByteSize(this Hocon.HoconElement element) { }
        public static System.Nullable<long> GetByteSize(this Hocon.HoconElement element, string path) { }
        public static System.Nullable<long> GetByteSize(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static System.Nullable<long> GetByteSize(this Hocon.HoconElement element, string path, System.Nullable<long> @default) { }
        public static System.Nullable<long> GetByteSize(this Hocon.HoconElement element, Hocon.HoconPath path, System.Nullable<long> @default) { }
        public static char GetChar(this Hocon.HoconElement element) { }
        public static char GetChar(this Hocon.HoconElement element, string path) { }
        public static char GetChar(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static char GetChar(this Hocon.HoconElement element, string path, char @default) { }
        public static char GetChar(this Hocon.HoconElement element, Hocon.HoconPath path, char @default) { }
        public static decimal GetDecimal(this Hocon.HoconElement element) { }
        public static decimal GetDecimal(this Hocon.HoconElement element, string path) { }
        public static decimal GetDecimal(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static decimal GetDecimal(this Hocon.HoconElement element, string path, decimal @default) { }
        public static decimal GetDecimal(this Hocon.HoconElement element, Hocon.HoconPath path, decimal @default) { }
        public static double GetDouble(this Hocon.HoconElement element) { }
        public static double GetDouble(this Hocon.HoconElement element, string path) { }
        public static double GetDouble(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static double GetDouble(this Hocon.HoconElement element, string path, double @default) { }
        public static double GetDouble(this Hocon.HoconElement element, Hocon.HoconPath path, double @default) { }
        public static float GetFloat(this Hocon.HoconElement element) { }
        public static float GetFloat(this Hocon.HoconElement element, string path) { }
        public static float GetFloat(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static float GetFloat(this Hocon.HoconElement element, string path, float @default) { }
        public static float GetFloat(this Hocon.HoconElement element, Hocon.HoconPath path, float @default) { }
        public static int GetInt(this Hocon.HoconElement element) { }
        public static int GetInt(this Hocon.HoconElement element, string path) { }
        public static int GetInt(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static int GetInt(this Hocon.HoconElement element, string path, int @default) { }
        public static int GetInt(this Hocon.HoconElement element, Hocon.HoconPath path, int @default) { }
        public static long GetLong(this Hocon.HoconElement element) { }
        public static long GetLong(this Hocon.HoconElement element, string path) { }
        public static long GetLong(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static long GetLong(this Hocon.HoconElement element, string path, long @default) { }
        public static long GetLong(this Hocon.HoconElement element, Hocon.HoconPath path, long @default) { }
        public static Hocon.HoconObject GetObject(this Hocon.HoconElement element) { }
        public static Hocon.HoconObject GetObject(this Hocon.HoconElement element, Hocon.HoconObject @default) { }
        public static Hocon.HoconObject GetObject(this Hocon.HoconElement element, string path, Hocon.HoconObject @default) { }
        public static Hocon.HoconObject GetObject(this Hocon.HoconElement element, Hocon.HoconPath path, Hocon.HoconObject @default) { }
        public static Hocon.HoconObject GetObject(this Hocon.HoconElement element, string path) { }
        public static Hocon.HoconObject GetObject(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static sbyte GetSByte(this Hocon.HoconElement element) { }
        public static sbyte GetSByte(this Hocon.HoconElement element, string path) { }
        public static sbyte GetSByte(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static sbyte GetSByte(this Hocon.HoconElement element, string path, sbyte @default) { }
        public static sbyte GetSByte(this Hocon.HoconElement element, Hocon.HoconPath path, sbyte @default) { }
        public static short GetShort(this Hocon.HoconElement element) { }
        public static short GetShort(this Hocon.HoconElement element, string path) { }
        public static short GetShort(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static short GetShort(this Hocon.HoconElement element, string path, short @default) { }
        public static short GetShort(this Hocon.HoconElement element, Hocon.HoconPath path, short @default) { }
        public static string GetString(this Hocon.HoconElement element) { }
        public static string GetString(this Hocon.HoconElement element, string path) { }
        public static string GetString(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static string GetString(this Hocon.HoconElement element, string path, string @default) { }
        public static string GetString(this Hocon.HoconElement element, Hocon.HoconPath path, string @default) { }
        public static System.TimeSpan GetTimeSpan(this Hocon.HoconElement element, bool allowInfinite = True) { }
        public static System.TimeSpan GetTimeSpan(this Hocon.HoconElement element, System.Nullable<System.TimeSpan> @default, bool allowInfinite = True) { }
        public static System.TimeSpan GetTimeSpan(this Hocon.HoconElement element, string path, bool allowInfinite = True) { }
        public static System.TimeSpan GetTimeSpan(this Hocon.HoconElement element, Hocon.HoconPath path, bool allowInfinite = True) { }
        public static System.TimeSpan GetTimeSpan(this Hocon.HoconElement element, string path, System.Nullable<System.TimeSpan> @default, bool allowInfinite = True) { }
        public static System.TimeSpan GetTimeSpan(this Hocon.HoconElement element, Hocon.HoconPath path, System.Nullable<System.TimeSpan> @default, bool allowInfinite = True) { }
        public static uint GetUInt(this Hocon.HoconElement element) { }
        public static uint GetUInt(this Hocon.HoconElement element, string path) { }
        public static uint GetUInt(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static uint GetUInt(this Hocon.HoconElement element, string path, uint @default) { }
        public static uint GetUInt(this Hocon.HoconElement element, Hocon.HoconPath path, uint @default) { }
        public static ulong GetULong(this Hocon.HoconElement element) { }
        public static ulong GetULong(this Hocon.HoconElement element, string path) { }
        public static ulong GetULong(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static ulong GetULong(this Hocon.HoconElement element, string path, ulong @default) { }
        public static ulong GetULong(this Hocon.HoconElement element, Hocon.HoconPath path, ulong @default) { }
        public static ushort GetUShort(this Hocon.HoconElement element) { }
        public static ushort GetUShort(this Hocon.HoconElement element, string path) { }
        public static ushort GetUShort(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static ushort GetUShort(this Hocon.HoconElement element, string path, ushort @default) { }
        public static ushort GetUShort(this Hocon.HoconElement element, Hocon.HoconPath path, ushort @default) { }
        public static Hocon.HoconElement GetValue(this Hocon.HoconElement element, string path) { }
        public static Hocon.HoconElement GetValue(this Hocon.HoconElement element, Hocon.HoconPath path) { }
        public static bool TryGetBigInteger(this Hocon.HoconElement element, out System.Numerics.BigInteger result) { }
        public static bool TryGetBigInteger(this Hocon.HoconElement element, string path, out System.Numerics.BigInteger result) { }
        public static bool TryGetBigInteger(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Numerics.BigInteger result) { }
        public static bool TryGetBoolean(this Hocon.HoconElement element, out bool result) { }
        public static bool TryGetBoolean(this Hocon.HoconElement element, string path, out bool result) { }
        public static bool TryGetBoolean(this Hocon.HoconElement element, Hocon.HoconPath path, out bool result) { }
        public static bool TryGetByte(this Hocon.HoconElement element, out byte result) { }
        public static bool TryGetByte(this Hocon.HoconElement element, string path, out byte result) { }
        public static bool TryGetByte(this Hocon.HoconElement element, Hocon.HoconPath path, out byte result) { }
        public static bool TryGetByteSize(this Hocon.HoconElement element, out System.Nullable<long> result) { }
        public static bool TryGetByteSize(this Hocon.HoconElement element, string path, out System.Nullable<long> result) { }
        public static bool TryGetByteSize(this Hocon.HoconElement element, Hocon.HoconPath path, out System.Nullable<long> result) { }
        public static bool TryGetChar(this Hocon.HoconElement element, out char result) { }
        public static bool TryGetChar(this Hocon.HoconElement element, string path, out char result) { }
        public static bool TryGetChar(this Hocon.HoconElement element, Hocon.HoconPath path, out char result) { }
        public static bool TryGetDecimal(this Hocon.HoconElement element, out decimal result) { }
        public static bool TryGetDecimal(this Hocon.HoconElement element, string path, out decimal result) { }
        public static bool TryGetDecimal(this Hocon.HoconElement element, Hocon.HoconPath path, out decimal result) { }
        public static bool TryGetDouble(this Hocon.HoconElement element, out double result) { }
        public static bool TryGetDouble(this Hocon.HoconElement element, string path, out double result) { }
        public static bool TryGetDouble(this Hocon.HoconElement element, Hocon.HoconPath path, out double result) { }
        public static bool TryGetFloat(this Hocon.HoconElement element, out float result) { }
        public static bool TryGetFloat(this Hocon.HoconElement element, string path, out float result) { }
        public static bool TryGetFloat(this Hocon.HoconElement element, Hocon.HoconPath path, out float result) { }
        public static bool TryGetInt(this Hocon.HoconElement element, out int result) { }
        public static bool TryGetInt(this Hocon.HoconElement element, string path, out int result) { }
        public static bool TryGetInt(this Hocon.HoconElement element, Hocon.HoconPath path, out int result) { }
        public static bool TryGetLong(this Hocon.HoconElement element, out long result) { }
        public static bool TryGetLong(this Hocon.HoconElement element, string path, out long result) { }
        public static bool TryGetLong(this Hocon.HoconElement element, Hocon.HoconPath path, out long result) { }
        public static bool TryGetObject(this Hocon.HoconElement element, out Hocon.HoconObject result) { }
        public static bool TryGetObject(this Hocon.HoconElement element, string path, out Hocon.HoconObject result) { }
        public static bool TryGetObject(this Hocon.HoconElement element, Hocon.HoconPath path, out Hocon.HoconObject result) { }
        public static bool TryGetSByte(this Hocon.HoconElement element, out sbyte result) { }
        public static bool TryGetSByte(this Hocon.HoconElement element, string path, out sbyte result) { }
        public static bool TryGetSByte(this Hocon.HoconElement element, Hocon.HoconPath path, out sbyte result) { }
        public static bool TryGetShort(this Hocon.HoconElement element, out short result) { }
        public static bool TryGetShort(this Hocon.HoconElement element, string path, out short result) { }
        public static bool TryGetShort(this Hocon.HoconElement element, Hocon.HoconPath path, out short result) { }
        public static bool TryGetString(this Hocon.HoconElement element, out string result) { }
        public static bool TryGetString(this Hocon.HoconElement element, string path, out string result) { }
        public static bool TryGetString(this Hocon.HoconElement element, Hocon.HoconPath path, out string result) { }
        public static bool TryGetTimeSpan(this Hocon.HoconElement element, out System.TimeSpan result, bool allowInfinite = True) { }
        public static bool TryGetTimeSpan(this Hocon.HoconElement element, string path, out System.TimeSpan result, bool allowInfinite = True) { }
        public static bool TryGetTimeSpan(this Hocon.HoconElement element, Hocon.HoconPath path, out System.TimeSpan result, bool allowInfinite = True) { }
        public static bool TryGetUInt(this Hocon.HoconElement element, out uint result) { }
        public static bool TryGetUInt(this Hocon.HoconElement element, string path, out uint result) { }
        public static bool TryGetUInt(this Hocon.HoconElement element, Hocon.HoconPath path, out uint result) { }
        public static bool TryGetULong(this Hocon.HoconElement element, out ulong result) { }
        public static bool TryGetULong(this Hocon.HoconElement element, string path, out ulong result) { }
        public static bool TryGetULong(this Hocon.HoconElement element, Hocon.HoconPath path, out ulong result) { }
        public static bool TryGetUShort(this Hocon.HoconElement element, out ushort result) { }
        public static bool TryGetUShort(this Hocon.HoconElement element, string path, out ushort result) { }
        public static bool TryGetUShort(this Hocon.HoconElement element, Hocon.HoconPath path, out ushort result) { }
        public static bool TryGetValue(this Hocon.HoconElement element, string path, out Hocon.HoconElement result) { }
        public static bool TryGetValue(this Hocon.HoconElement element, Hocon.HoconPath path, out Hocon.HoconElement result) { }
    }
    public class static StringUtil
    {
        public static string AddQuotes(this string s) { }
        public static string AddTripleQuotes(this string s) { }
        public static bool NeedQuotes(this string s) { }
        public static bool NeedTripleQuotes(this string s) { }
    }
}